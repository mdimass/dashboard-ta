<%- include('../partials/header') %>
<style>
  .bd-placeholder-img {
    font-size: 1.125rem;
    text-anchor: middle;
    -webkit-user-select: none;
    -moz-user-select: none;
    user-select: none;
  }

  @media (min-width: 768px) {
    .bd-placeholder-img-lg {
      font-size: 3.5rem;
    }
  }

  .b-example-divider {
    width: 100%;
    height: 3rem;
    background-color: rgba(0, 0, 0, 0.1);
    border: solid rgba(0, 0, 0, 0.15);
    border-width: 1px 0;
    box-shadow: inset 0 0.5em 1.5em rgba(0, 0, 0, 0.1),
      inset 0 0.125em 0.5em rgba(0, 0, 0, 0.15);
  }

  .b-example-vr {
    flex-shrink: 0;
    width: 1.5rem;
    height: 100vh;
  }

  .bi {
    vertical-align: -0.125em;
    fill: currentColor;
  }

  .nav-scroller {
    position: relative;
    z-index: 2;
    height: 2.75rem;
    overflow-y: hidden;
  }

  .nav-scroller .nav {
    display: flex;
    flex-wrap: nowrap;
    padding-bottom: 1rem;
    margin-top: -1px;
    overflow-x: auto;
    text-align: center;
    white-space: nowrap;
    -webkit-overflow-scrolling: touch;
  }

  .btn-bd-primary {
    --bd-violet-bg: #712cf9;
    --bd-violet-rgb: 112.520718, 44.062154, 249.437846;

    --bs-btn-font-weight: 600;
    --bs-btn-color: var(--bs-white);
    --bs-btn-bg: var(--bd-violet-bg);
    --bs-btn-border-color: var(--bd-violet-bg);
    --bs-btn-hover-color: var(--bs-white);
    --bs-btn-hover-bg: #6528e0;
    --bs-btn-hover-border-color: #6528e0;
    --bs-btn-focus-shadow-rgb: var(--bd-violet-rgb);
    --bs-btn-active-color: var(--bs-btn-hover-color);
    --bs-btn-active-bg: #5a23c8;
    --bs-btn-active-border-color: #5a23c8;
  }

  .bd-mode-toggle {
    z-index: 1500;
  }

  .bd-mode-toggle .bi {
    width: 1em;
    height: 1em;
  }

  .bd-mode-toggle .dropdown-menu .active .bi {
    display: block !important;
  }
</style>

<!-- Custom styles for this template -->
<link href="/stylesheets/dashboard.css" rel="stylesheet" />

<header
  class="navbar sticky-top bg-dark flex-md-nowrap p-0 shadow"
  data-bs-theme="dark"
>
  <a class="navbar-brand col-md-3 col-lg-2 me-0 px-3 fs-6 text-white" href="#"
    >Polines</a
  >

  <ul class="navbar-nav flex-row d-md-none">
    <li class="nav-item text-nowrap">
      <button
        class="nav-link px-3 text-white"
        type="button"
        data-bs-toggle="offcanvas"
        data-bs-target="#sidebarMenu"
        aria-controls="sidebarMenu"
        aria-expanded="false"
        aria-label="Toggle navigation"
      >
        <i class="bi bi-list"></i>
      </button>
    </li>
  </ul>
</header>

<div class="container-fluid">
  <div class="row">
    <div
      class="sidebar border border-right col-md-3 col-lg-2 p-2 bg-body-tertiary"
    >
      <div
        class="offcanvas-md offcanvas-end bg-body-tertiary"
        tabindex="-1"
        id="sidebarMenu"
        aria-labelledby="sidebarMenuLabel"
      >
        <div class="offcanvas-header">
          <h5 class="offcanvas-title" id="sidebarMenuLabel">Polines</h5>
          <button
            type="button"
            class="btn-close"
            data-bs-dismiss="offcanvas"
            data-bs-target="#sidebarMenu"
            aria-label="Close"
          ></button>
        </div>
        <form id="control-form">
          <div class="offcanvas-body d-md-flex flex-column p-2 pt-lg-3">
            <!-- Tempat Form -->
            <div class="mb-3">
              <label for="mode-kontrol" class="form-label">Menu Kontrol</label>
              <div id="mode-kontrol" class="dropdown w-100">
                <button
                  class="btn btn-primary dropdown-toggle w-100"
                  type="button"
                  data-bs-toggle="dropdown"
                  aria-expanded="false"
                >
                  Select Mode
                </button>
                <ul class="dropdown-menu w-100">
                  <li>
                    <p class="dropdown-item">Select Mode</p>
                  </li>
                  <li>
                    <p class="dropdown-item">P</p>
                  </li>
                  <li>
                    <p class="dropdown-item">PD</p>
                  </li>
                  <li>
                    <p class="dropdown-item">PID</p>
                  </li>
                </ul>
              </div>
            </div>
            <div class="mb-3">
              <label for="Kp" class="form-label">Kp :</label>
              <input
                type="number"
                min="0"
                class="form-control"
                id="Kp"
                name="kp"
                placeholder="Enter Kp"
              />
            </div>
            <div class="mb-3">
              <label for="Ki" class="form-label">Ki :</label>
              <input
                type="number"
                min="0"
                class="form-control"
                id="Ki"
                name="ki"
                placeholder="Enter Ki"
              />
            </div>
            <div class="mb-3">
              <label for="Kd" class="form-label">Kd :</label>
              <input
                type="number"
                min="0"
                class="form-control"
                id="Kd"
                name="kd"
                placeholder="Enter Kd"
              />
            </div>
            <div class="mb-3">
              <label for="SetPoint" class="form-label">Set Point :</label>
              <input
                type="number"
                min="0"
                class="form-control"
                id="SetPoint"
                name="setpoint"
                placeholder="Enter SetPoint"
              />
            </div>

            <div class="mb-3">
              <label for="timesampling" class="form-label"
                >Time Sampling (ms) :</label
              >
              <input
                type="number"
                min="0"
                class="form-control"
                id="timesampling"
                name="timesampling"
                placeholder="Enter timesampling"
              />
            </div>

            <div
              class="btn-group"
              role="group"
              aria-label="Basic mixed styles example"
            >
              <button type="submit" class="btn btn-success">Start</button>
              <button type="button" class="btn btn-warning">Stop</button>
              <button type="button" class="btn btn-danger">Clear</button>
            </div>
          </div>
        </form>
      </div>
    </div>

    <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4">
      <div
        class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom"
      >
        <h1 class="h2">Dashboard</h1>
        <div class="btn-toolbar mb-2 mb-md-0">
          <!-- <div class="btn-group me-2">
            <button type="button" class="btn btn-sm btn-outline-secondary">
              Share
            </button>
            <button type="button" class="btn btn-sm btn-outline-secondary">
              Export
            </button>
          </div> -->
          <button type="button" id="logout" class="btn btn-danger">
            Logout
          </button>
        </div>
      </div>

      <canvas class="my-4 w-100" id="myChart" width="900" height="380"></canvas>
    </main>
  </div>
</div>
<script>
  $(document).ready(function () {
    // Hide PID-related inputs initially
    $("#Kp, #Ki, #Kd").closest(".mb-3").hide();

    // Disable form inputs initially
    $("#control-form input").prop("disabled", true);
    $("#control-form button").not(".dropdown-toggle").prop("disabled", true);

    // When a mode is selected from the dropdown
    $(".dropdown-item").click(function () {
      var selectedMode = $(this).text().trim();
      var modeButton = $(".dropdown-toggle");

      // If "Select Mode" is clicked, reset everything
      if (selectedMode === "Select Mode") {
        modeButton.text("Select Mode");
        $("#Kp, #Ki, #Kd").closest(".mb-3").hide();
        $("#control-form input").prop("disabled", true);
        $("#control-form button")
          .not(".dropdown-toggle")
          .prop("disabled", true);
        return;
      }

      // Update the button text to show selected mode
      modeButton.text(selectedMode);

      // Hide all parameter inputs first
      $("#Kp, #Ki, #Kd").closest(".mb-3").hide();

      // Show the appropriate inputs based on selected mode
      if (selectedMode === "P") {
        $("#Kp").closest(".mb-3").show();
      } else if (selectedMode === "PD") {
        $("#Kp, #Kd").closest(".mb-3").show();
      } else if (selectedMode === "PID") {
        $("#Kp, #Ki, #Kd").closest(".mb-3").show();
      }

      // Enable form inputs when a valid mode is selected
      $("#control-form input").prop("disabled", false);
      $("#control-form button").not(".dropdown-toggle").prop("disabled", false);
    });

    // Form submission handler
    $("#control-form").submit(function (e) {
      e.preventDefault();

      // Get all form values
      const formData = {
        mode: $(".dropdown-toggle").text() || null,
        kp: $("#Kp").val() || null,
        ki: $("#Ki").val() || null,
        kd: $("#Kd").val() || null,
        set_point: $("#SetPoint").val() || null,
        time_sampling: $("#timesampling").val() || null,
      };

      // POST to /dashboard
      $.ajax({
        type: "POST",
        url: "/dashboard",
        data: formData,
        success: function (response) {
          console.log("Success:", response);
          alert("Control parameters sent successfully!");
        },
        error: function (xhr, status, error) {
          console.error("Error:", error);
          alert("Error sending control parameters!");
        },
      });
    });

    // Clear button handler
    $(".btn-danger").click(function () {
      $("#control-form")[0].reset();
      $(".dropdown-toggle").text("Select Mode");
      $("#Kp, #Ki, #Kd").closest(".mb-3").hide();
      $("#control-form input").prop("disabled", true);
      $(".btn-group button").not(".dropdown-toggle").prop("disabled", true);
    });

    // Stop button handler
    $(".btn-warning").click(function () {
      // Send stop command to server
      $.post("/dashboard/stop", function (response) {
        console.log("Stop command sent:", response);
        alert("System stopped!");
      });
    });

    // Logout button handler
    $("#logout").click(function () {
      // Send logout command to server
      $.post("/logout", function (response) {
        console.log("Logout command sent:", response);
        window.location.href = "/";
      }).fail(function (xhr, status, error) {
        console.error("Logout failed:", error);
        alert("Error during logout. Please try again.");
      });
    });
  });
</script>

<%- include('../partials/footer') %>
